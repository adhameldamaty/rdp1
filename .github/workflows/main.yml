name: Windows RDP via ngrok (trial)

on:
  workflow_dispatch:

jobs:
  rdp:
    runs-on: windows-latest
    timeout-minutes: 350
    env:
      NGROK_AUTHTOKEN: ${{ secrets.NGROK_AUTHTOKEN }}

    steps:
      - name: Download ngrok
        run: |
          Invoke-WebRequest -Uri "https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip" -OutFile "ngrok.zip"
          Expand-Archive ngrok.zip -DestinationPath .
      - name: Auth ngrok
        run: .\ngrok\ngrok.exe authtoken $env:NGROK_AUTHTOKEN
      - name: Enable RDP and firewall
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name 'fDenyTSConnections' -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
      - name: Start ngrok TCP 3389
        run: |
          Start-Process -FilePath ".\ngrok\ngrok.exe" -ArgumentList "tcp 3389" -NoNewWindow
          Start-Sleep -Seconds 8
          $tunnel = (Invoke-RestMethod -Uri http://127.0.0.1:4040/api/tunnels -ErrorAction SilentlyContinue)
          if ($tunnel) {
            $pub = $tunnel.tunnels[0].public_url
            Write-Output "NGROK_PUBLIC=$pub"
          } else {
            Write-Output "Ngrok API not ready; check ngrok process log in actions output."
          }
      - name: Keep job alive
        run: |
          Write-Output "Keeping job alive. Cancel workflow to stop."
          for ($i=0; $i -lt 21600; $i++) { Start-Sleep -Seconds 10 }
